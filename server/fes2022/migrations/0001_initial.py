# Generated by Django 4.1 on 2022-09-27 12:10

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import fes2022.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=20, verbose_name='エリア名')),
            ],
        ),
        migrations.CreateModel(
            name='Inset',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('img', models.ImageField(upload_to=fes2022.models.Inset.get_image_path, verbose_name='画像アップロード用')),
                ('alt', models.TextField(verbose_name='画像の説明(alt属性)')),
            ],
        ),
        migrations.CreateModel(
            name='NamecardDesign',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('serial', models.IntegerField(verbose_name='通し番号')),
                ('img', models.ImageField(upload_to=fes2022.models.NamecardDesign.get_image_path, verbose_name='デザイン画像')),
                ('name', models.CharField(max_length=50, verbose_name='ネームカードデザインの名前')),
                ('campus', models.IntegerField(choices=[(0, 'INIAD'), (1, 'WELLB')], default=0, verbose_name='INIAD or WELLB')),
                ('numofprints', models.IntegerField(default=500, verbose_name='印刷数')),
                ('numofremaining', models.IntegerField(default=-1, verbose_name='残り')),
                ('is_subject_secret', models.BooleanField(default=False, verbose_name='シークレットか')),
                ('is_only_advance', models.BooleanField(default=False, verbose_name='事前登録限定か')),
                ('text', models.TextField(verbose_name='デザインの説明')),
            ],
        ),
        migrations.CreateModel(
            name='NamecardPool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qrid', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('used', models.BooleanField(default=False, verbose_name='指定済みかどうか')),
                ('namecard', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pool', to='fes2022.namecarddesign')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('groupname', models.CharField(max_length=100, verbose_name='団体名')),
                ('campus', models.IntegerField(choices=[(0, 'INIAD'), (1, 'WELLB')], default=0, verbose_name='INIAD or WELLB')),
                ('floor', models.IntegerField(default=1, verbose_name='階')),
                ('room_number', models.IntegerField(verbose_name='教室名かドア番号の小さいほう')),
                ('only_stamp', models.BooleanField(default=False, verbose_name='スタンプラリー専用かどうか(優先度高:こちらがTrueの場合強制的にスタンプラリー専用になります)')),
                ('have_a_stamp', models.BooleanField(default=False, verbose_name='スタンプラリー対象団体かどうか')),
                ('pop', models.ImageField(upload_to='ipad_pop/', verbose_name='QRコード読み取りiPadに表示する画像')),
                ('count', models.IntegerField(default=0, verbose_name='今の人数')),
                ('unique_count', models.IntegerField(default=0, verbose_name='総人数')),
                ('total_count', models.IntegerField(default=0, verbose_name='総延べ人数')),
            ],
        ),
        migrations.CreateModel(
            name='Stamp',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('img', models.ImageField(upload_to=fes2022.models.Stamp.get_image_path, verbose_name='スタンプの素材画像')),
                ('serial', models.IntegerField(verbose_name='表示順序')),
                ('position_y', models.IntegerField(default=0, verbose_name='素材の上側のポジション(px)')),
                ('position_x', models.IntegerField(default=0, verbose_name='素材の左側のポジション(px)')),
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stamp', to='fes2022.room')),
            ],
        ),
        migrations.CreateModel(
            name='StampCourse',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50, verbose_name='スタンプラリーコースの名称')),
                ('main_color', models.CharField(max_length=6, verbose_name='サイトデザインの色(メイン)')),
                ('sub_color', models.CharField(max_length=6, verbose_name='サイトデザインの色(サブ)')),
                ('activation', models.BooleanField(default=False, verbose_name='スタンプラリーを有効化するかどうか')),
                ('finished', models.BooleanField(default=False, verbose_name='終了後スタンプラリーを見れるかどうか')),
                ('background', models.ImageField(upload_to=fes2022.models.StampCourse.get_image_path, verbose_name='スタンプラリーの背景画像')),
            ],
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifying', models.IntegerField(blank=True, null=True, verbose_name='識別番号')),
                ('userid', models.UUIDField(blank=True, db_index=True, null=True, unique=True, verbose_name='QRコードのID')),
                ('management_uuid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='管理用uuid')),
                ('nickname', models.CharField(max_length=20, verbose_name='ニックネーム')),
                ('first_name', models.CharField(max_length=20, verbose_name='名')),
                ('last_name', models.CharField(max_length=20, verbose_name='姓')),
                ('ruby_first_name', models.CharField(max_length=20, verbose_name='メイ')),
                ('ruby_last_name', models.CharField(max_length=20, verbose_name='セイ')),
                ('email', models.EmailField(blank=True, max_length=200, null=True, verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='電話番号')),
                ('address', models.IntegerField(choices=[(1, '東京都（北区）'), (2, '東京都（23区）'), (3, '東京都（市部）'), (4, '埼玉県（川口）'), (5, '埼玉県（）'), (6, '神奈川県'), (7, '茨城県'), (8, '栃木県'), (9, '群馬県'), (10, '千葉県'), (11, '北海道'), (12, '青森県'), (13, '岩手県'), (14, '宮城県'), (15, '秋田県'), (16, '山形県'), (17, '福島県'), (18, '新潟県'), (19, '富山県'), (20, '石川県'), (21, '福井県'), (22, '山梨県'), (23, '長野県'), (24, '岐阜県'), (25, '静岡県'), (26, '愛知県'), (27, '三重県'), (28, '滋賀県'), (29, '京都府'), (30, '大阪府'), (31, '兵庫県'), (32, '奈良県'), (33, '和歌山県'), (34, '鳥取県'), (35, '島根県'), (36, '岡山県'), (37, '広島県'), (38, '山口県'), (39, '徳島県'), (40, '香川県'), (41, '愛媛県'), (42, '高知県'), (43, '福岡県'), (44, '佐賀県'), (45, '長崎県'), (46, '熊本県'), (47, '大分県'), (48, '宮崎県'), (49, '鹿児島県'), (50, '沖縄県')], verbose_name='住所')),
                ('age', models.IntegerField(choices=[(0, '10歳未満'), (1, '10代'), (2, '20代'), (3, '30代'), (4, '40代'), (5, '50代'), (6, '60代'), (7, '70代'), (8, '80歳以上')], verbose_name='年代')),
                ('gender', models.IntegerField(choices=[(1, '男性'), (2, '女性'), (3, 'その他'), (4, '指定しない')], verbose_name='性別')),
                ('major_subject', models.IntegerField(blank=True, choices=[(1, '情報系'), (2, '理系'), (3, '文系'), (4, 'その他')], null=True, verbose_name='専攻/希望分野')),
                ('job', models.IntegerField(choices=[(1, '未就学児'), (2, '小学生'), (3, '中学生'), (4, '高校生'), (5, '大学生'), (6, 'その他の学生'), (7, '会社員'), (8, '教職員'), (9, '自営業'), (10, 'その他')], verbose_name='職業')),
                ('know_about', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), blank=True, size=None)),
                ('remark', models.TextField(blank=True, null=True, verbose_name='備考欄')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='初回登録日時')),
                ('is_verified_email', models.BooleanField(default=False, verbose_name='使用可能なメールアドレスかどうか')),
                ('is_preregistration', models.BooleanField(default=False, verbose_name='事前登録かどうか')),
                ('is_printed', models.BooleanField(default=False, verbose_name='印刷完了かどうか')),
                ('is_handedover', models.BooleanField(default=False, verbose_name='お渡し済みかどうか')),
                ('design', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='visitors_select', to='fes2022.namecarddesign', verbose_name='ネームカードのデザイン')),
                ('id_data', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='visitor', to='fes2022.namecardpool')),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('number', models.IntegerField(default=1, verbose_name='通し番号')),
                ('story', models.TextField(verbose_name='ストーリー')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stamps', to='fes2022.area')),
            ],
        ),
        migrations.CreateModel(
            name='StampHistory',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('got_stamp', models.ManyToManyField(blank=True, related_name='history', to='fes2022.stamp')),
                ('got_story', models.ManyToManyField(blank=True, related_name='history', to='fes2022.story')),
                ('stampcourse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='history', to='fes2022.stampcourse')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stamp_history', to='fes2022.visitor')),
            ],
        ),
        migrations.AddField(
            model_name='stamp',
            name='stampcourse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stamps', to='fes2022.stampcourse'),
        ),
        migrations.AddField(
            model_name='stamp',
            name='stroy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stamp', to='fes2022.story', verbose_name='連携させるとき用'),
        ),
        migrations.CreateModel(
            name='PlaceID',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('placeid', models.IntegerField(db_index=True, verbose_name='場所ID')),
                ('placenum', models.IntegerField(verbose_name='場所番号')),
                ('door_number', models.IntegerField(verbose_name='教室番号かドア番号')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PlaceIDs', to='fes2022.room')),
            ],
        ),
        migrations.CreateModel(
            name='NowRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanned_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='日時')),
                ('inorout', models.BooleanField(default=True, verbose_name='入室or退室')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='nowroom', to='fes2022.room', verbose_name='教室')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='nowroom', to='fes2022.visitor', verbose_name='来場者')),
            ],
        ),
        migrations.CreateModel(
            name='NowCampus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanned_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='日時')),
                ('inorout', models.BooleanField(default=True, verbose_name='入構or退構')),
                ('count', models.IntegerField(default=0, verbose_name='今の人数')),
                ('unique_count', models.IntegerField(default=0, verbose_name='総人数')),
                ('total_count', models.IntegerField(default=0, verbose_name='総延べ人数')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='nowcampus', to='fes2022.visitor', verbose_name='来場者')),
            ],
        ),
    ]
